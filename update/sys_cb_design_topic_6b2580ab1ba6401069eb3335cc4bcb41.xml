<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_design_topic">
    <sys_cb_design_topic action="INSERT_OR_UPDATE">
        <compiled_topic display_value="_PRVW__572580abafa6401096d46ef8098f4d3e">532580ab1ba6401069eb3335cc4bcb3f</compiled_topic>
        <design_definition>{"type":"FlowTopic","triggers":[{"type":"Trigger","name":"d3b6c5b606b64e9787480fb8312d6f18","triggerType":"request","applicability":{"type":"Applicability","mode":"script","value":"true"},"id":"d3b6c5b606b64e9787480fb8312d6f18"}],"goals":[{"name":"primary","trigger_id":"d3b6c5b606b64e9787480fb8312d6f18","nodes":[{"type":"StartGoal","goal_id":"18d0796b949f441987c6318506e96c22","greeting_msg":{"type":"String","mode":"string","value":"I can help you find and update NeedIt records for a type of request."},"id":"2ff5664afbe74fab94c226be557ad6fe","name":"Start"},{"type":"TerminateGoal","goal_id":"18d0796b949f441987c6318506e96c22","confirmation_msg":{"type":"String","mode":"string","value":"Ask again when you need to update other NeedIt records."},"id":"0ab9caac914f42b2be680c8df8569199","name":"End"},{"type":"ChoiceInputPrompt","expression_mode":"simple","id":"56a4b5c91c114835885c7684bbb7d6a6","name":"NeedIt Type","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"},"variable_id":"330a2435f24a44a4bea28db7d13a85fa","message":{"type":"String","mode":"string","value":"Which type of NeedIt record would you like to view?"},"optional":false,"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":false}},{"type":"OutputPrompt","value":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       var result;\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessage('hi there {0}', [vaInputs.first_name]);\n       } else {\n           return gs.getMessage('how are you {0}', [vaInputs.last_name]);\n       }\n    */\n    return 'You selected: ' + vaInputs.needit_type.getDisplayValue();\n})()\n"},"id":"f80ed633246742999477ce58be43a7c0","name":"Confirm NeedIt Type","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"}},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"ebb4ea6c25994280845ec73f0672f190","name":"NeedIt List","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"},"variable_id":"c2397b94f2e64649b6913706d00f21ff","message":{"type":"String","mode":"string","value":"Select a NeedIt record to view"},"optional":false,"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":false},"expression_mode":"script","script":"(function execute(table) {\n    /* Code your GlideRecord query logic here. For example:\n    \n        var options = [];\n        var gr = new GlideRecord(table);\n        gr.addEncodedQuery('active=true^numberSTARTSWITHINC001001');\n        gr.setLimit(10);\n        gr.query();\n        while(gr.next()) {\n            options.push({ 'value': gr.getUniqueValue(), 'label': gr.getValue('short_description') });\n        }\n        return options;\n    */\n\n    // Initialize an array for the list of NeedIt records to show\n\t    var options = [];\n\t\n\t    // Query the table selected in the Table field for active records with the \n\t    // u_request_type selected in the NeedIt Type node where the user is the \n\t    // u_requested_for. Order the results by the When needed value.\n\t    var grNI = new GlideRecord(table);\n\t    grNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n\t    grNI.addQuery('active','true');\n\t    grNI.addQuery('u_requested_for',vaInputs.user);\n\t    grNI.orderBy('u_when_needed');\n\t    grNI.query();\n\t\n\t    // Push a value and label pair to the array for each record the query returns.\n\t    // The value is the unique value. The label is the number, u_when_needed, and \t\t    // short_description values for the NeedIt record.\n\t    while(grNI.next()) {\n\t        options.push({ 'value': grNI.getUniqueValue(), 'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n\t    }\n\t\n\t    // Return the array\n\t    return options;\n})(table)\n","no_options_found_message":{"type":"String","mode":"string","value":"You have no open NeedIt records."},"condition":{"type":"Condition","mode":"glide_scripted_query","value":"(function execute(table) {\n    /* Code your GlideRecord query logic here. For example:\n    \n        var options = [];\n        var gr = new GlideRecord(table);\n        gr.addEncodedQuery('active=true^numberSTARTSWITHINC001001');\n        gr.setLimit(10);\n        gr.query();\n        while(gr.next()) {\n            options.push({ 'value': gr.getUniqueValue(), 'label': gr.getValue('short_description') });\n        }\n        return options;\n    */\n\n    // Initialize an array for the list of NeedIt records to show\n\t    var options = [];\n\t\n\t    // Query the table selected in the Table field for active records with the \n\t    // u_request_type selected in the NeedIt Type node where the user is the \n\t    // u_requested_for. Order the results by the When needed value.\n\t    var grNI = new GlideRecord(table);\n\t    grNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n\t    grNI.addQuery('active','true');\n\t    grNI.addQuery('u_requested_for',vaInputs.user);\n\t    grNI.orderBy('u_when_needed');\n\t    grNI.query();\n\t\n\t    // Push a value and label pair to the array for each record the query returns.\n\t    // The value is the unique value. The label is the number, u_when_needed, and \t\t    // short_description values for the NeedIt record.\n\t    while(grNI.next()) {\n\t        options.push({ 'value': grNI.getUniqueValue(), 'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n\t    }\n\t\n\t    // Return the array\n\t    return options;\n})(table)\n"}},{"type":"RecordOutputPrompt","mode":"variable","table":"x_58872_needit_needit","variable_id":"c2397b94f2e64649b6913706d00f21ff","fields":["priority","short_description","u_when_needed"],"id":"25e7898a00e64252b59c5ea8b0f3c798","name":"NeedIt Card","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"},"condition":{"type":"Condition","mode":"","value":""}},{"type":"InputPrompt","variable_id":"975ddb62cacd4dbb8c17f2c54d88feee","message":{"type":"String","mode":"string","value":"Would you like to view another NeedIt Record?"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":false},"optional":false,"id":"9a254e5662964cdc8b6c42b857e3bc5f","name":"Search Again","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"}},{"type":"Decision","name":"Find more NeedIt records?","branches":[{"type":"Branch","label":"No","expression":{"type":"Applicability","mode":"query","value":"search_again="},"id":"19fc47566ba6479994aa8d40c4d2101c","name":"No"},{"type":"Branch","label":"Yes","expression":{"type":"Applicability","mode":"query","value":"search_again=true"},"id":"3ceea73666484b1cb6eedede07f582ba","name":"Yes"}],"id":"a9da5edcb126470f8429e86fe6ef31fd","goal_id":"18d0796b949f441987c6318506e96c22"},{"type":"InputPrompt","variable_id":"dd64a337b6fe4947b7a5ce1dad5edcff","message":{"type":"String","mode":"string","value":"When do you need the NeedIt completed?"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":false},"optional":false,"id":"f84346cd4ec64c1b983662de8145f5d2","name":"New When Needed Date","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"}},{"type":"CRUDAction","mode":"update","query":"u_when_needed={{vaInputs.new_when_needed_date}}","variable_id":"c2397b94f2e64649b6913706d00f21ff","id":"5da1c5be4ef34612b088441b567432fd","name":"Change When Needed Date","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"}},{"type":"RecordOutputPrompt","mode":"variable","table":"x_58872_needit_needit","variable_id":"c2397b94f2e64649b6913706d00f21ff","fields":["u_when_needed"],"id":"7597fad9f76b4cfba549a0081fc94992","name":"Updated NeedIt","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"},"condition":{"type":"Condition","mode":"","value":""}},{"type":"ScriptedAction","script":"(function execute() {\n    /* Code your scripted action here. For example, you might update a \n       record based on conditional logic:\n    \n        if (vaVars.my_flag == 'say hello') {\n            gs.info('hi there');\n        } else {\n            gs.info('bye now');\n        }\n    */\n    // Add 1 to the search_count variable\n\t    vaVars.search_count = vaVars.search_count + 1;\n})()\n","id":"40081437718c4d2f8f01d17c11bbae54","name":"Update search_count","goal_id":"18d0796b949f441987c6318506e96c22","applicability":{"type":"Applicability","mode":"script","value":"true"}},{"type":"Decision","name":"Decision","branches":[{"type":"Branch","label":"Less than 3","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    if (vaVars.search_count &lt; 3)\n\t        return true;\n\t    else\n\t        return false;\n})()\n"},"id":"f644270ca0134831b21c52b32427906d","name":"Less than 3"},{"type":"Branch","label":"3 or more","expression":{"type":"Applicability","mode":"script","value":"(function execute() {\n    /* Return true or false to indicate the branch condition's applicability.\n       For example:\n\n       var applies = vaInputs.first_name == 'Bill' ? true : false;\n       return applies;\n    */\n    if (!(vaVars.search_count &lt; 3))\n\t        return true;\n\t    else\n\t        return false;\n})()\n"},"id":"e36a18274f6b4f38aca239acdca00399","name":"3 or more"}],"id":"08076ba273a641059c2bad931c238188","goal_id":"18d0796b949f441987c6318506e96c22"}],"edges":[{"type":"Edge","source_node_id":"2ff5664afbe74fab94c226be557ad6fe","target_node_id":"56a4b5c91c114835885c7684bbb7d6a6","id":"30753c16d4024e5ba7f6b568be81ad40"},{"type":"Edge","source_node_id":"56a4b5c91c114835885c7684bbb7d6a6","target_node_id":"f80ed633246742999477ce58be43a7c0","id":"40360f4cd5e943798e6f07c2a316c341"},{"type":"Edge","source_node_id":"f80ed633246742999477ce58be43a7c0","target_node_id":"ebb4ea6c25994280845ec73f0672f190","id":"8318961da8a04de497106dd67c431ab9"},{"type":"Edge","source_node_id":"ebb4ea6c25994280845ec73f0672f190","target_node_id":"25e7898a00e64252b59c5ea8b0f3c798","id":"8fb8be70f903489985834c6512f0c26a"},{"type":"Edge","source_node_id":"9a254e5662964cdc8b6c42b857e3bc5f","target_node_id":"a9da5edcb126470f8429e86fe6ef31fd","id":"a6736d4259834c5aaaec7736438b1430"},{"type":"Edge","source_node_id":"a9da5edcb126470f8429e86fe6ef31fd","target_node_id":"0ab9caac914f42b2be680c8df8569199","branch_id":"19fc47566ba6479994aa8d40c4d2101c","id":"48fd3ea81665410ebe4a567da9c3ff27","name":"19fc47566ba6479994aa8d40c4d2101c"},{"type":"Edge","source_node_id":"25e7898a00e64252b59c5ea8b0f3c798","target_node_id":"f84346cd4ec64c1b983662de8145f5d2","id":"8acd63dbd1184ce6982a744563e0bd10"},{"type":"Edge","source_node_id":"f84346cd4ec64c1b983662de8145f5d2","target_node_id":"5da1c5be4ef34612b088441b567432fd","id":"a607497fa20d4a89846bbd87606b8a1c"},{"type":"Edge","source_node_id":"5da1c5be4ef34612b088441b567432fd","target_node_id":"7597fad9f76b4cfba549a0081fc94992","id":"cd4654947596449ca832ad3862feebb1"},{"type":"Edge","source_node_id":"7597fad9f76b4cfba549a0081fc94992","target_node_id":"9a254e5662964cdc8b6c42b857e3bc5f","id":"2f4e303121e7443fab5e27f2202fe0b7"},{"type":"Edge","source_node_id":"a9da5edcb126470f8429e86fe6ef31fd","target_node_id":"40081437718c4d2f8f01d17c11bbae54","branch_id":"3ceea73666484b1cb6eedede07f582ba","id":"5ed6acca47bb450d8c957d9e4461ee39","name":"3ceea73666484b1cb6eedede07f582ba"},{"type":"Edge","source_node_id":"40081437718c4d2f8f01d17c11bbae54","target_node_id":"08076ba273a641059c2bad931c238188","id":"32fea8aeb12b4ac7b299e5a5e94edfe1"},{"type":"Edge","source_node_id":"08076ba273a641059c2bad931c238188","target_node_id":"56a4b5c91c114835885c7684bbb7d6a6","branch_id":"f644270ca0134831b21c52b32427906d","id":"87baf7e1293048f09af4dd528517be78","name":"f644270ca0134831b21c52b32427906d"},{"type":"Edge","source_node_id":"08076ba273a641059c2bad931c238188","target_node_id":"0ab9caac914f42b2be680c8df8569199","branch_id":"e36a18274f6b4f38aca239acdca00399","id":"2ccd277e9eef4816b27e0682fffa885b","name":"e36a18274f6b4f38aca239acdca00399"}],"id":"18d0796b949f441987c6318506e96c22"}],"script_variables":[{"type":"String","name":"search_count","value":{"type":"String","mode":"string","value":"0"},"id":"3fc251f6b7f146feb1d35b4748875745"}],"glide_variables":[{"type":"Choice","choices":[{"name":"Legal","element":"legal"},{"name":"Facilities","element":"facilities"},{"name":"Human Resources","element":"hr"}],"id":"330a2435f24a44a4bea28db7d13a85fa","name":"needit_type"},{"type":"Reference","table":"x_58872_needit_needit","id":"c2397b94f2e64649b6913706d00f21ff","name":"needit_list"},{"type":"True/False","id":"975ddb62cacd4dbb8c17f2c54d88feee","name":"search_again"},{"type":"Date/Time","mode":"date","id":"dd64a337b6fe4947b7a5ce1dad5edcff","name":"new_when_needed_date"},{"type":"Reference","table":"","id":"d8d047dd03c14154b51508da00ef4061","name":"change_when_needed_date"},{"type":"Reference","table":"sys_user","id":"current-user","name":"user"}],"applicability":{"type":"Applicability","mode":"script","value":"true"},"roles":[],"scope":"17a5731f1b66401069eb3335cc4bcb33","id":"ac86731f1b66401069eb3335cc4bcb4b","name":"_PRVW__572580abafa6401096d46ef8098f4d3e","key_phrases":["Update NeedIt Records","NeedIt Request"],"nlu_provider":"","nlu_model":"","nlu_intent":"","flexible_conversation_switching":false,"design_category":"9cd5371f1b66401069eb3335cc4bcb4f"}</design_definition>
        <design_topic_id>ac86731f1b66401069eb3335cc4bcb4b</design_topic_id>
        <name>_PRVW__572580abafa6401096d46ef8098f4d3e</name>
        <sys_class_name>sys_cb_design_topic</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-01-30 14:56:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6b2580ab1ba6401069eb3335cc4bcb41</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FlowTopic</sys_name>
        <sys_package display_value="NeedIt Virtual Agent Conversations" source="x_448066_needit_vi">17a5731f1b66401069eb3335cc4bcb33</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt Virtual Agent Conversations">17a5731f1b66401069eb3335cc4bcb33</sys_scope>
        <sys_update_name>sys_cb_design_topic_6b2580ab1ba6401069eb3335cc4bcb41</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-01-30 14:56:47</sys_updated_on>
        <type>FlowTopic</type>
    </sys_cb_design_topic>
</record_update>
